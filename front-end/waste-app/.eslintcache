[{"C:\\Users\\Tuca\\Desktop\\Web-tech-project\\front-end\\waste-app\\src\\index.js":"1","C:\\Users\\Tuca\\Desktop\\Web-tech-project\\front-end\\waste-app\\src\\reportWebVitals.js":"2","C:\\Users\\Tuca\\Desktop\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Login\\index.js":"3","C:\\Users\\Tuca\\Desktop\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Homepage\\index.js":"4","C:\\Users\\Tuca\\Desktop\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Profile\\index.js":"5","C:\\Users\\Tuca\\Desktop\\Web-tech-project\\front-end\\waste-app\\src\\components\\FoodItem\\index.js":"6","C:\\Users\\Tuca\\Desktop\\Web-tech-project\\front-end\\waste-app\\src\\App.js":"7","C:\\Users\\Tuca\\Desktop\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Achievements\\index.js":"8","C:\\Users\\Tuca\\Desktop\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Groups\\index.js":"9","C:\\Users\\Tuca\\Desktop\\Web-tech-project\\front-end\\waste-app\\src\\components\\Navigation\\index.js":"10","C:\\Users\\Tuca\\Desktop\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Register\\index.js":"11"},{"size":554,"mtime":1607277775641,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1607277775645,"results":"14","hashOfConfig":"13"},{"size":5523,"mtime":1609524401272,"results":"15","hashOfConfig":"13"},{"size":1174,"mtime":1609524401270,"results":"16","hashOfConfig":"13"},{"size":1981,"mtime":1609524401273,"results":"17","hashOfConfig":"13"},{"size":5329,"mtime":1609524401257,"results":"18","hashOfConfig":"13"},{"size":345,"mtime":1609524401256,"results":"19","hashOfConfig":"13"},{"size":293,"mtime":1609524401262,"results":"20","hashOfConfig":"13"},{"size":130,"mtime":1608586509417,"results":"21","hashOfConfig":"13"},{"size":6716,"mtime":1609524401260,"results":"22","hashOfConfig":"13"},{"size":9969,"mtime":1609524401277,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"5ghqs0",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},"C:\\Users\\Tuca\\Desktop\\Web-tech-project\\front-end\\waste-app\\src\\index.js",[],[],"C:\\Users\\Tuca\\Desktop\\Web-tech-project\\front-end\\waste-app\\src\\reportWebVitals.js",[],[],"C:\\Users\\Tuca\\Desktop\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Login\\index.js",[],"C:\\Users\\Tuca\\Desktop\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Homepage\\index.js",[],[],"C:\\Users\\Tuca\\Desktop\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Profile\\index.js",[],"C:\\Users\\Tuca\\Desktop\\Web-tech-project\\front-end\\waste-app\\src\\components\\FoodItem\\index.js",["53","54","55","56","57","58","59"],"import React, {useState} from \"react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {red} from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport {FacebookIcon, FacebookShareButton, TwitterIcon, TwitterShareButton} from 'react-share';\r\nimport axios from 'axios';\r\nimport {toast, ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './style.scss';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n}));\r\n\r\nconst FoodItem = (props) => {\r\n    const classes = useStyles();\r\n    const {name, expireDate, brand, price, count, id} = props;\r\n    const [isOpened, setIsOpened] = useState(false);\r\n    const userId=localStorage.getItem('userId');\r\n\r\n    const shareUrl = `http://food-waste.com/${id}`;\r\n    console.log('Share URL:',shareUrl);\r\n    console.log('User id:',userId,'id:',id);\r\n    const postTitle = `Hi everyone! I have some spare ${name} that I want to share with you!`\r\n    toast.configure();\r\n    const handleClaim = () => {\r\n        axios.put(`http://localhost:8080/api/claimProduct/${userId}/${id}`,{userId:userId,id:id},{withCredentials: true})\r\n            .then(() =>{\r\n                toast.success(`Product ${name} claimed succesfully`, {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    progress: undefined,\r\n                });\r\n                console.log('Product claimed successfully')\r\n            })\r\n            .catch((error) => {\r\n                console.log('Error:',error.response.data.message);\r\n                toast.error(error.response.data.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    progress: undefined,\r\n                });\r\n            })\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                        {name.charAt(0)}\r\n                    </Avatar>\r\n                }\r\n                action={\r\n                    <IconButton aria-label=\"settings\">\r\n                        <MoreVertIcon/>\r\n                    </IconButton>\r\n                }\r\n                title={name}\r\n                subheader={expireDate}\r\n            />\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {brand} {price} {count}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n                <IconButton aria-label=\"add to favorites\">\r\n                    <DoneIcon onClick={handleClaim}/>\r\n                </IconButton>\r\n                <IconButton aria-label=\"share\">\r\n                    <ShareIcon onClick={() => setIsOpened(!isOpened)}/>\r\n                </IconButton>\r\n                {isOpened && (\r\n                    <>\r\n                        <IconButton>\r\n                            <FacebookShareButton\r\n                                url={shareUrl}\r\n                                quote={postTitle}\r\n                                className=\"Demo__some-network__share-button\"\r\n                            >\r\n                                <FacebookIcon size={32} round/>\r\n                            </FacebookShareButton>\r\n                        </IconButton>\r\n                        <IconButton>\r\n                            <TwitterShareButton\r\n                                url={shareUrl}\r\n                                title={postTitle}\r\n                                className=\"Demo__some-network__share-button\"\r\n                            >\r\n                                <TwitterIcon size={32} round/>\r\n                            </TwitterShareButton>\r\n                        </IconButton>\r\n\r\n                    </>\r\n                )}\r\n\r\n            </CardActions>\r\n\r\n        </Card>\r\n    )\r\n\r\n}\r\n\r\nexport default FoodItem;","C:\\Users\\Tuca\\Desktop\\Web-tech-project\\front-end\\waste-app\\src\\App.js",[],[],"C:\\Users\\Tuca\\Desktop\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Achievements\\index.js",[],"C:\\Users\\Tuca\\Desktop\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Groups\\index.js",[],"C:\\Users\\Tuca\\Desktop\\Web-tech-project\\front-end\\waste-app\\src\\components\\Navigation\\index.js",["60"],"C:\\Users\\Tuca\\Desktop\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Register\\index.js",["61","62"],"import React, {useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select'\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport {useHistory, withRouter} from \"react-router-dom\";\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    formControl: {\r\n\r\n        minWidth: '100%',\r\n    },\r\n}));\r\n\r\nconst Register = () => {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [type, setType] = useState('');\r\n\r\n    const [open, setOpen] = useState(false);\r\n    toast.configure();\r\n\r\n    const data = {\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        email: email,\r\n        password: password,\r\n        address: address,\r\n        type: type,\r\n    }\r\n\r\n    let Toast = (props) => {\r\n        const {severity, message} = props;\r\n        return (\r\n            <Alert severity={severity} onClose={() => setOpen(false)}>{message}</Alert>\r\n        )\r\n    }\r\n    const handleChange = (event) => {\r\n        setType(event.target.value);\r\n    };\r\n\r\n\r\n    const handleRegisterData = () => {\r\n        axios.post('http://localhost:8080/api/register', data, {withCredentials:true})\r\n            .then(() => {\r\n                console.log('Data send successfully', data);\r\n                history.push('/');\r\n                setOpen(true);\r\n                // setToastr (<Toast severity={'success'} message={\"Register successfully\"}/>);\r\n            })\r\n            .catch((error) => {\r\n                const values = error.response.data;\r\n                console.log('Values:', values);\r\n                Object.values(values).map((value) => {\r\n                    toast.error(value, {\r\n                        position: \"top-right\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: false,\r\n                        draggable: false,\r\n                        progress: undefined,\r\n                    });\r\n\r\n                })\r\n\r\n            })\r\n    }\r\n    return (\r\n        <div className={'waste-app-body'}>\r\n            <Container component=\"main\" maxWidth=\"xs\" className={'waste-app-register-container'}>\r\n                <CssBaseline/>\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon/>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Register\r\n                    </Typography>\r\n                    <form className={classes.form} noValidate>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    autoComplete=\"fname\"\r\n                                    name=\"firstName\"\r\n                                    variant=\"outlined\"\r\n                                    value={firstName}\r\n                                    onChange={(event) => setFirstName(event.target.value)}\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"firstName\"\r\n                                    label=\"First Name\"\r\n                                    autoFocus\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    value={lastName}\r\n                                    onChange={(event => setLastName(event.target.value))}\r\n                                    id=\"lastName\"\r\n                                    label=\"Last Name\"\r\n                                    name=\"lastName\"\r\n                                    autoComplete=\"lname\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    value={email}\r\n                                    onChange={(event => setEmail(event.target.value))}\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    value={password}\r\n                                    onChange={(event => setPassword(event.target.value))}\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    value={address}\r\n                                    onChange={(event => setAddress(event.target.value))}\r\n                                    name=\"adress\"\r\n                                    label=\"Adress\"\r\n                                    id=\"adress\"\r\n                                    autoComplete=\"adress\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                    <InputLabel id=\"demo-simple-select-outlined-label\">Type</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-outlined-label\"\r\n                                        id=\"demo-simple-select-outlined\"\r\n                                        value={type}\r\n                                        onChange={handleChange}\r\n                                        label=\"Type\"\r\n                                    >\r\n                                        <MenuItem value=\"\">\r\n                                            <em>None</em>\r\n                                        </MenuItem>\r\n                                        <MenuItem value={'Mixed'}>Mixed</MenuItem>\r\n                                        <MenuItem value={'Vegetarian'}>Vegetarian</MenuItem>\r\n                                        <MenuItem value={'Vegan'}>Vegan</MenuItem>\r\n                                        <MenuItem value={'Carnivor'}>Carnivor</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Button\r\n\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={handleRegisterData}\r\n                        >\r\n                            Register\r\n                        </Button>\r\n                        <Grid container justify=\"flex-end\">\r\n                            <Grid item>\r\n                                <Link href=\"#\" variant=\"body2\" onClick={() => history.push('/login')}>\r\n                                    Already have an account? Sign in\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n\r\n            </Container>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default withRouter(Register);",[],{"ruleId":"63","severity":1,"message":"64","line":46,"column":12,"nodeType":"65","endLine":46,"endColumn":16},{"ruleId":"63","severity":1,"message":"66","line":46,"column":18,"nodeType":"65","endLine":46,"endColumn":28},{"ruleId":"63","severity":1,"message":"67","line":46,"column":30,"nodeType":"65","endLine":46,"endColumn":35},{"ruleId":"63","severity":1,"message":"68","line":46,"column":37,"nodeType":"65","endLine":46,"endColumn":42},{"ruleId":"63","severity":1,"message":"69","line":46,"column":44,"nodeType":"65","endLine":46,"endColumn":49},{"ruleId":"63","severity":1,"message":"70","line":46,"column":51,"nodeType":"65","endLine":46,"endColumn":53},{"ruleId":"63","severity":1,"message":"71","line":88,"column":31,"nodeType":"72","endLine":88,"endColumn":37},{"ruleId":"63","severity":1,"message":"73","line":45,"column":22,"nodeType":"65","endLine":45,"endColumn":30},{"ruleId":"63","severity":1,"message":"74","line":76,"column":16,"nodeType":"65","endLine":76,"endColumn":24},{"ruleId":"63","severity":1,"message":"75","line":76,"column":26,"nodeType":"65","endLine":76,"endColumn":33},"react/prop-types","'name' is missing in props validation","Property","'expireDate' is missing in props validation","'brand' is missing in props validation","'price' is missing in props validation","'count' is missing in props validation","'id' is missing in props validation","'name.charAt' is missing in props validation","Identifier","'children' is missing in props validation","'severity' is missing in props validation","'message' is missing in props validation"]